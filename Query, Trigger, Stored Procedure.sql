USE MYHOTEL;
DELIMITER \\
-- @block STORED PROCEDURE 1 --
DROP PROCEDURE IF EXISTS GoiDichVu\\
CREATE PROCEDURE GoiDichVu (IN MaKhachHang VARCHAR(8))
BEGIN
    DECLARE count int DEFAULT 0;
    SET count = (SELECT COUNT(HDGDV_MKH) FROM HOADONGOIDICHVU WHERE HDGDV_MKH = MaKhachHang);
    IF count > 0 THEN
    SELECT HOADONGOIDICHVU.HDGDV_TG AS 'Tên Gói', HOADONGOIDICHVU.SoKhach AS 'Số Khách', HOADONGOIDICHVU.NgayBatDau AS 'Ngày Bắt đầu', 
            ADDDATE(HOADONGOIDICHVU.NgayBatDau, INTERVAL GOIDICHVU.SoNgay DAY) AS 'Ngày kết thúc', HOADONGOIDICHVU.SoNgaySuDungConLai AS 'Số ngày sử dụng còn lại'
    FROM HOADONGOIDICHVU
    WHERE HOADONGOIDICHVU.HDGDV_MKH = MaKhachHang;
    ELSE SELECT CONCAT('YOUR PARAMETER ',MaKhachHang,' DOES NOT EXIST!') AS 'ERROR';
    END IF;
END\\
-- @block STORED PROCEDURE 2 --
DROP PROCEDURE IF EXISTS ThongKeLuotKhach\\
CREATE PROCEDURE ThongKeLuotKhach (IN MCN VARCHAR(50), IN NamThongKe INT(5))
BEGIN
    SELECT MONTH(NgayNhanPhong) AS 'Tháng', SUM(SoKhach) AS 'Tổng số lượt khách'
    FROM (SELECT TinhTrang, SoKhach, PT_MCN, NgayNhanPhong FROM DONDATPHONG INNER JOIN PHONGTHUE ON MaDatPhong = PT_MDP)
    WHERE PT_MCN = MCN AND TinhTrang = 1 AND YEAR(NgayNhanPhong) = NamThongKe
    GROUP BY MONTH(NgayNhanPhong)
    ORDER BY MONTH(NgayNhanPhong);
END\\
DELIMITER ;
-- @block TRIGGER 1a --
DELIMITER \\
DROP TRIGGER IF EXISTS update_TongTienGoiDichVu\\
CREATE TRIGGER update_TongTienGoiDichVu
BEFORE INSERT ON HOADONGOIDICHVU FOR EACH ROW
BEGIN
    DECLARE LoaiKH INT;
    DECLARE SoNgayConLai INT;
    DECLARE SoTien INT;
    SET LoaiKH = (SELECT Loai FROM KHACHHANG WHERE KHACHHANG.MaKhachHang = NEW.HDGDV_MKH);
    SET SoNgayConLai = (SELECT SoNgay FROM GOIDICHVU WHERE GOIDICHVU.TenGoi = NEW.HDGDV_TG);
    IF LoaiKH = 2 THEN SET SoTien = ((SELECT Gia FROM GOIDICHVU WHERE GOIDICHVU.TenGoi = NEW.HDGDV_TG) * 9 / 10);
    ELSEIF LoaiKH = 3 THEN SET SoTien = ((SELECT Gia FROM GOIDICHVU WHERE GOIDICHVU.TenGoi = NEW.HDGDV_TG) * 17 / 20),
							SoNgayConLai = SoNgayConLai + 1;
    ELSEIF LoaiKH = 4 THEN SET SoTien = ((SELECT Gia FROM GOIDICHVU WHERE GOIDICHVU.TenGoi = NEW.HDGDV_TG) * 4 / 5),
							SoNgayConLai = SoNgayConLai + 2;
	ELSE SET SoTien = NEW.TongTien;
    END IF;
    SET NEW.TongTien = SoTien;
    SET NEW.SoNgaySuDungConLai = SoNgayConLai;
END\\
DELIMITER ;
-- @block TRIGGER 1b --
DELIMITER \\
DROP TRIGGER IF EXISTS update_TongTienDonDatPhong\\
CREATE TRIGGER update_TongTienDonDatPhong
BEFORE INSERT ON DONDATPHONG FOR EACH ROW
BEGIN
	DECLARE LoaiKH INT;
    DECLARE SoNgayConLai INT;
    DECLARE SoTien INT;
    SET LoaiKH = (SELECT Loai FROM KHACHHANG WHERE KHACHHANG.MaKhachHang = NEW.DDP_MKH);
    IF NEW.DDP_TG IS NULL THEN
		IF LoaiKH = 2 THEN SET SoTien = NEW.TongTien * 9 / 10;
		ELSEIF LoaiKH = 3 THEN SET SoTien = NEW.TongTien * 17 / 20;
		ELSEIF LoaiKH = 4 THEN SET SoTien = NEW.TongTien * 4 / 5;
		ELSE SET SoTien = NEW.TongTien;
        END IF;
	ELSE 
		SET SoTien = 0;
        UPDATE HOADONGOIDICHVU
        SET SoNgaySuDungConLai = SoNgaySuDungConLai - TIMESTAMPDIFF(DAY, NEW.NgayNhanPhong, NEW.NgayTraPhong)
        WHERE HOADONGOIDICHVU.HDGDV_TG = NEW.DDP_TG AND HOADONGOIDICHVU.HDGDV_MKH = NEW.DDP_MKH;
    END IF;
	SET NEW.TongTien = SoTien;
END\\
DELIMITER ;
-- @block TRIGGER 1c --
DELIMITER \\
DROP TRIGGER IF EXISTS update_Diem\\
CREATE TRIGGER update_Diem
AFTER INSERT ON KHACHHANG FOR EACH ROW
BEGIN
    SET NEW.Diem = FLOOR(((SELECT TongTien FROM HOADONGOIDICHVU WHERE HDGDV_MKH = MaKhachHang) + (SELECT TongTien FROM DONDATPHONG WHERE DDP_MKH = MaKhachHang)) / 1000);
END\\
DELIMITER ;
-- @block TRIGGER 1d --
DELIMITER \\
DROP TRIGGER IF EXISTS update_LoaiKhachHang\\
CREATE TRIGGER update_LoaiKhachHang
AFTER INSERT ON KHACHHANG FOR EACH ROW
BEGIN
    IF Diem < 50 THEN SET NEW.Loai = 1;
    ELSEIF Diem < 100 THEN SET NEW.Loai = 2;
    ELSEIF Diem < 1000 THEN SET NEW.Loai = 3;
    ELSE SET NEW.Loai = 4;
    END IF;
END\\
DELIMITER ;
-- @block TRIGGER 2 --
DELIMITER \\
DROP TRIGGER IF EXISTS constraint_OverlappingPackage\\
CREATE TRIGGER constraint_OverlappingPackage
BEFORE INSERT ON HOADONGOIDICHVU FOR EACH ROW
BEGIN
    DECLARE temp DATETIME;
    SET temp = ADDDATE(NgayBatDau, INTERVAL 1 YEAR);
    IF (EXISTS(SELECT * FROM HOADONGOIDICHVU WHERE HDGDV_TG = NEW.HDGDV_TG)) THEN
        IF (NEW.NgayBatDau BETWEEN (SELECT NgayBatDau FROM HOADONGOIDICHVU WHERE HDGDV_TG = NEW.HDGDV_TG) AND temp) 
        THEN signal sqlstate '45000';
        END IF;
    END IF;
END\\
DELIMITER ;